{"ast":null,"code":"var _jsxFileName = \"D:\\\\sem2\\\\Hobby Project\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n\n  // Get user info after login using the token\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const fetchUser = async () => {\n        try {\n          const response = await axios.get('http://localhost:5000/api/auth/me', {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n          });\n          console.log('User fetched:', response.data);\n          // Do something with the user data...\n        } catch (error) {\n          console.error('Error fetching user:', error.response ? error.response.data : error.message);\n        }\n      };\n      fetchUser();\n    }\n  }, []);\n  const loginUser = async (email, password) => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/auth/login', {\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Store token and user data in localStorage\n      localStorage.setItem('token', token);\n      setUser(user);\n    } catch (error) {\n      console.error('Error during login:', error);\n      throw error;\n    }\n  };\n  const logoutUser = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loginUser,\n      logoutUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","localStorage","getItem","fetchUser","response","get","headers","Authorization","console","log","data","error","message","loginUser","email","password","post","setItem","logoutUser","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/sem2/Hobby Project/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  // Get user info after login using the token\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      const fetchUser = async () => {\r\n        try {\r\n          const response = await axios.get('http://localhost:5000/api/auth/me', {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n            },\r\n          });\r\n          console.log('User fetched:', response.data);\r\n          // Do something with the user data...\r\n        } catch (error) {\r\n          console.error('Error fetching user:', error.response ? error.response.data : error.message);\r\n        }\r\n      };\r\n      \r\n      fetchUser();\r\n    }\r\n  }, []);\r\n\r\n  const loginUser = async (email, password) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/auth/login', { email, password });\r\n      const { token, user } = response.data;\r\n\r\n      // Store token and user data in localStorage\r\n      localStorage.setItem('token', token);\r\n      setUser(user);\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logoutUser = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loginUser, logoutUser }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACT,MAAMG,SAAS,GAAG,MAAAA,CAAA,KAAY;QAC5B,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,mCAAmC,EAAE;YACpEC,OAAO,EAAE;cACPC,aAAa,EAAE,UAAUN,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;YACxD;UACF,CAAC,CAAC;UACFM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEL,QAAQ,CAACM,IAAI,CAAC;UAC3C;QACF,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACP,QAAQ,GAAGO,KAAK,CAACP,QAAQ,CAACM,IAAI,GAAGC,KAAK,CAACC,OAAO,CAAC;QAC7F;MACF,CAAC;MAEDT,SAAS,CAAC,CAAC;IACb;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,SAAS,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAC3C,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMb,KAAK,CAACyB,IAAI,CAAC,sCAAsC,EAAE;QAAEF,KAAK;QAAEC;MAAS,CAAC,CAAC;MAC9F,MAAM;QAAEf,KAAK;QAAEF;MAAK,CAAC,GAAGM,QAAQ,CAACM,IAAI;;MAErC;MACAT,YAAY,CAACgB,OAAO,CAAC,OAAO,EAAEjB,KAAK,CAAC;MACpCD,OAAO,CAACD,IAAI,CAAC;IACf,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMO,UAAU,GAAGA,CAAA,KAAM;IACvBjB,YAAY,CAACkB,UAAU,CAAC,OAAO,CAAC;IAChCpB,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACC,KAAK,EAAE;MAAEvB,IAAI;MAAEe,SAAS;MAAEK;IAAW,CAAE;IAAAtB,QAAA,EAC1DA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC5B,EAAA,CAjDWF,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAmDzB,eAAeD,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
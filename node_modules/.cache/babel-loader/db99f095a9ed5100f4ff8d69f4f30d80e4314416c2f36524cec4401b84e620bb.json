{"ast":null,"code":"var _jsxFileName = \"D:\\\\sem2\\\\Hobby Project\\\\client\\\\src\\\\pages\\\\Upload.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Upload() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [imageFile, setImageFile] = useState(null);\n  const [price, setPrice] = useState('');\n  const [preview, setPreview] = useState('');\n  const handleImageUpload = async () => {\n    const formData = new FormData();\n    formData.append('image', imageFile);\n    const res = await axios.post('http://localhost:5000/api/upload/upload', formData);\n    return res.data.imageUrl;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) return alert('You must be logged in.');\n    try {\n      const imageUrl = await handleImageUpload();\n      await axios.post('http://localhost:5000/api/artworks', {\n        title,\n        image: imageUrl,\n        price\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      alert('Artwork uploaded!');\n    } catch (err) {\n      console.error(err);\n      alert('Artwork upload error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Title\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: e => {\n        const file = e.target.files[0];\n        if (!file) return;\n        setImageFile(file);\n        setPreview(URL.createObjectURL(file));\n      },\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), preview && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: preview,\n      alt: \"Preview\",\n      width: 200\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: price,\n      onChange: e => setPrice(e.target.value),\n      placeholder: \"Price (\\u20B9)\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Post Artwork\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Upload, \"84kF0J0Sc4Xy9ewIHHyg0cvMxxE=\");\n_c = Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","Upload","_s","title","setTitle","imageFile","setImageFile","price","setPrice","preview","setPreview","handleImageUpload","formData","FormData","append","res","post","data","imageUrl","handleSubmit","e","preventDefault","token","localStorage","getItem","alert","image","headers","Authorization","err","console","error","onSubmit","children","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","file","files","URL","createObjectURL","src","alt","width","_c","$RefreshReg$"],"sources":["D:/sem2/Hobby Project/client/src/pages/Upload.js"],"sourcesContent":["import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function Upload() {\r\n  const [title, setTitle] = useState('');\r\n  const [imageFile, setImageFile] = useState(null);\r\n  const [price, setPrice] = useState('');\r\n  const [preview, setPreview] = useState('');\r\n\r\n  const handleImageUpload = async () => {\r\n    const formData = new FormData();\r\n    formData.append('image', imageFile);\r\n    const res = await axios.post('http://localhost:5000/api/upload/upload', formData);\r\n    return res.data.imageUrl;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const token = localStorage.getItem('token');\r\n    if (!token) return alert('You must be logged in.');\r\n\r\n    try {\r\n      const imageUrl = await handleImageUpload();\r\n      await axios.post('http://localhost:5000/api/artworks', {\r\n        title,\r\n        image: imageUrl,\r\n        price,\r\n      }, {\r\n        headers: {\r\n          Authorization: token\r\n        }\r\n      });\r\n      alert('Artwork uploaded!');\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Artwork upload error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input value={title} onChange={(e) => setTitle(e.target.value)} placeholder=\"Title\" required />\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={(e) => {\r\n          const file = e.target.files[0];\r\n          if (!file) return;\r\n          setImageFile(file);\r\n          setPreview(URL.createObjectURL(file));\r\n        }}\r\n        required\r\n      />\r\n      {preview && <img src={preview} alt=\"Preview\" width={200} />}\r\n      <input type=\"number\" value={price} onChange={(e) => setPrice(e.target.value)} placeholder=\"Price (â‚¹)\" required />\r\n      <button type=\"submit\">Post Artwork</button>\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\sem2\\\\Hobby Project\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n\n  // Get user info after login using the token\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/auth/me', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}` // Assuming token is stored in localStorage\n          }\n        });\n        setUser(res.data); // Set the user state with the fetched data\n      } catch (err) {\n        console.error('Error fetching user: ', err);\n        // Optionally, you could handle different errors (e.g., show a message for 404 or 401)\n      }\n    };\n    fetchUser();\n  }, []);\n  const loginUser = async (email, password) => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/auth/login', {\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Store token and user data in localStorage\n      localStorage.setItem('token', token);\n      setUser(user); // Set the user after login\n    } catch (error) {\n      console.error('Error during login:', error);\n      throw error;\n    }\n  };\n  const logoutUser = () => {\n    localStorage.removeItem('token');\n    setUser(null); // Reset the user state on logout\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: user ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Welcome, \", user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 45\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return React.useContext(AuthContext); // Use the context in other components\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","fetchUser","res","get","headers","Authorization","localStorage","getItem","data","err","console","error","loginUser","email","password","response","post","token","setItem","logoutUser","removeItem","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","useContext","$RefreshReg$"],"sources":["D:/sem2/Hobby Project/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  // Get user info after login using the token\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/auth/me', {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,  // Assuming token is stored in localStorage\r\n          },\r\n        });\r\n        setUser(res.data);  // Set the user state with the fetched data\r\n      } catch (err) {\r\n        console.error('Error fetching user: ', err);\r\n        // Optionally, you could handle different errors (e.g., show a message for 404 or 401)\r\n      }\r\n    };\r\n\r\n    fetchUser();\r\n  }, []);\r\n  \r\n\r\n  const loginUser = async (email, password) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/auth/login', { email, password });\r\n      const { token, user } = response.data;\r\n\r\n      // Store token and user data in localStorage\r\n      localStorage.setItem('token', token);\r\n      setUser(user); // Set the user after login\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logoutUser = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null); // Reset the user state on logout\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {user ? <p>Welcome, {user.name}</p> : <p>Loading...</p>}\r\n    </div>\r\n  );\r\n};\r\nexport const useAuth = () => {\r\n  return React.useContext(AuthContext); // Use the context in other components\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,mCAAmC,EAAE;UAC/DC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAG;UAC7D;QACF,CAAC,CAAC;QACFP,OAAO,CAACE,GAAG,CAACM,IAAI,CAAC,CAAC,CAAE;MACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;QAC3C;MACF;IACF,CAAC;IAEDR,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMW,SAAS,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAC3C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,IAAI,CAAC,sCAAsC,EAAE;QAAEH,KAAK;QAAEC;MAAS,CAAC,CAAC;MAC9F,MAAM;QAAEG,KAAK;QAAElB;MAAK,CAAC,GAAGgB,QAAQ,CAACP,IAAI;;MAErC;MACAF,YAAY,CAACY,OAAO,CAAC,OAAO,EAAED,KAAK,CAAC;MACpCjB,OAAO,CAACD,IAAI,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACvBb,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC;IAChCpB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;EACjB,CAAC;EAED,oBACEN,OAAA;IAAAG,QAAA,EACGE,IAAI,gBAAGL,OAAA;MAAAG,QAAA,GAAG,WAAS,EAACE,IAAI,CAACsB,IAAI;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAAG/B,OAAA;MAAAG,QAAA,EAAG;IAAU;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA/CWF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAgDzB,OAAO,MAAM+B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,OAAOxC,KAAK,CAACyC,UAAU,CAAClC,WAAW,CAAC,CAAC,CAAC;AACxC,CAAC;AAACiC,GAAA,CAFWD,OAAO;AAIpB,eAAehC,WAAW;AAAC,IAAA+B,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}